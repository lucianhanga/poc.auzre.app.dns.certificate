name: 11 - Let's Encrypt - Create Certificate.

# Controls when the workflow will run
on:
  # manual trigger
  workflow_dispatch:

jobs:

  generate-certificate:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # step 1 Login to Azure
      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # step 2 Install Certbot and Certbot Azure plugin
      - name: Install Certbot
        run: |
          # sudo apt-get update
          # sudo apt-get upgrade -y
          # python3 -m venv venv
          # source venv/bin/activate
          sudo pip install --upgrade pip
          sudo pip install certbot certbot-dns-azure

      # step 3 Verify the certbot installation
      - name: Verify the certbot installation
        run: |
          # source venv/bin/activate
          certbot --version
          certbot plugins

      # step 4 Create the certbot configuration file
      - name: Create the certbot configuration file
        run: |
            # source venv/bin/activate
            echo "dns_azure_sp_client_id = \"${{ secrets.AZURE_CLIENT_ID }}\"" > certbot.ini
            echo "dns_azure_sp_client_secret = \"${{ secrets.AZURE_CLIENT_SECRET }}\"" >> certbot.ini
            echo "dns_azure_subscription_id = \"${{ secrets.AZURE_SUBSCRIPTION_ID }}\"" >> certbot.ini
            echo "dns_azure_tenant_id = \"${{ secrets.AZURE_TENANT_ID }}\"" >> certbot.ini
            echo "dns_azure_environment = \"AzurePublicCloud\"" >> certbot.ini
            echo "dns_azure_zone1 = \"${{ secrets.AZURE_DOMAIN_NAME }}:/subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ secrets.AZURE_RESOURCE_GROUP }}\"" >> certbot.ini

      # step 5 Show the content of the certbot configuration file
      - name: Show the content of the certbot configuration file
        run: |
          # source venv/bin/activate
          cat certbot.ini

      # step 6 Create the wildcard certificate
      - name: Create the wildcard certificate
        run: |
          # source venv/bin/activate
          certbot certonly \
            --dry-run \
            --config-dir ./ \
            --work-dir ./ \
            --logs-dir ./ \
            --authenticator dns-azure \
            --preferred-challenges dns-01 \
            --dns-azure-config certbot.ini \
            --non-interactive \
            --agree-tos \
            --email "${{ secrets.AZURE_EMAIL }}" \
            -d "${{ secrets.AZURE_DOMAIN_NAME }}" \
            -d "*.${{ secrets.AZURE_DOMAIN_NAME }}"

      # step 8 Show the certificate
      - name: Show the certificate
        run: |
          # source venv/bin/activate
            ls -l./live/${{ secrets.AZURE_DOMAIN_NAME }}

      # step 9 Upload the artifacts for the next job

      - name: Upload the cert.pem
        uses: actions/upload-artifact@v4
        with:
          name: cert.pem
          path: ./live/${{ secrets.AZURE_DOMAIN_NAME }}/cert.pem
          retention-days: 1
          overwrite: true
          compression-level: 0  # no compression
      - name: Upload the chain.pem
        uses: actions/upload-artifact@v4
        with:
          name: chain.pem
          path: ./live/${{ secrets.AZURE_DOMAIN_NAME }}/chain.pem
          retention-days: 1
          overwrite: true
          compression-level: 0  # no compression
      - name: Upload the fullchain.pem
        uses: actions/upload-artifact@v4
        with:
          name: fullchain.pem
          path: ./live/${{ secrets.AZURE_DOMAIN_NAME }}/fullchain.pem
          retention-days: 1
          overwrite: true
          compression-level: 0  # no compression
      - name: Upload the privkey.pem
        uses: actions/upload-artifact@v4
        with:
          name: privkey.pem
          path: ./live/${{ secrets.AZURE_DOMAIN_NAME }}/privkey.pem
          retention-days: 1
          overwrite: true
          compression-level: 0  # no compression

